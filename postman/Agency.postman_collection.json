{
  "info": {
    "name": "Agency CRUD API",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "5b7c2a9d-6e3f-4a1b-cc9f-4d6b3a2b8f13"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "login"]
            },
            "body": {
              "mode": "raw",
              "raw": "{\n  \"national_id\": \"12345678901234\",\n  \"password\": \"123456\"\n}"
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "var json = pm.response.json();",
                  "if (json && json.token) {",
                  "  pm.environment.set('token', json.token);",
                  "  pm.collectionVariables.set('token', json.token);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        }
      ]
    },
    {
      "name": "Agency CRUD",
      "item": [
        {
          "name": "List Agencies",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/agencies?per_page=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agencies"],
              "query": [
                { "key": "per_page", "value": "10" }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has data', function () {",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('data');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Create Agency (with documents)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/agencies",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agencies"]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "user_id", "value": "1", "type": "text" },
                { "key": "name", "value": "Alpha Agency", "type": "text" },
                { "key": "number", "value": "AG-001", "type": "text" },
                { "key": "address", "value": "Riyadh, Saudi Arabia", "type": "text" },
                { "key": "date", "value": "2025-09-30", "type": "text" },
                { "key": "documents", "type": "file", "src": [] }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200 or 201', function () {",
                  "  pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                  "});",
                  "",
                  "pm.test('Response has agency data', function () {",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('id');",
                  "  pm.expect(json).to.have.property('name');",
                  "  pm.expect(json).to.have.property('documents');",
                  "});",
                  "",
                  "if (pm.response.code === 200 || pm.response.code === 201) {",
                  "  var json = pm.response.json();",
                  "  pm.environment.set('agency_id', json.id);",
                  "  pm.collectionVariables.set('agency_id', json.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Get Agency",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/agencies/{{agency_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agencies", "{{agency_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has agency data', function () {",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('id');",
                  "  pm.expect(json).to.have.property('name');",
                  "  pm.expect(json).to.have.property('documents');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Update Agency (with new documents)",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/agencies/{{agency_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agencies", "{{agency_id}}"]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "name", "value": "Alpha Agency Updated", "type": "text" },
                { "key": "address", "value": "Jeddah, Saudi Arabia", "type": "text" },
                { "key": "documents", "type": "file", "src": [] }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has updated agency data', function () {",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('id');",
                  "  pm.expect(json).to.have.property('name');",
                  "  pm.expect(json.name).to.eql('Alpha Agency Updated');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Delete Agency",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/agencies/{{agency_id}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agencies", "{{agency_id}}"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "  pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has success message', function () {",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('message');",
                  "  pm.expect(json.message).to.include('deleted');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        }
      ]
    },
    {
      "name": "Error Tests",
      "item": [
        {
          "name": "Create Agency (validation error)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/agencies",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agencies"]
            },
            "body": {
              "mode": "formdata",
              "formdata": [
                { "key": "name", "value": "Test Agency", "type": "text" }
              ]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 422', function () {",
                  "  pm.response.to.have.status(422);",
                  "});",
                  "",
                  "pm.test('Response has validation errors', function () {",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('errors');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Get Non-existent Agency",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/agencies/99999",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agencies", "99999"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 500', function () {",
                  "  pm.response.to.have.status(500);",
                  "});",
                  "",
                  "pm.test('Response has error message', function () {",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('message');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        },
        {
          "name": "Unauthorized Access",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/agencies",
              "host": ["{{baseUrl}}"],
              "path": ["api", "agencies"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Status code is 401', function () {",
                  "  pm.response.to.have.status(401);",
                  "});",
                  "",
                  "pm.test('Response has unauthorized message', function () {",
                  "  var json = pm.response.json();",
                  "  pm.expect(json).to.have.property('message');",
                  "  pm.expect(json.message).to.include('Unauthenticated');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "response": []
        }
      ]
    }
  ],
  "variable": [
    { "key": "baseUrl", "value": "http://127.0.0.1:8000" },
    { "key": "token", "value": "" },
    { "key": "agency_id", "value": "" }
  ]
}
